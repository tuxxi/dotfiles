#!/usr/bin/env python3

from shutil import move
import os
import os.path as path

BACKUP = ".backup"

# schema is dest : src to avoid duplicate keys
SYMLINKS = {
    ".gitconfig": "git/.gitconfig",
    ".config/nvim": "nvim",
    # use neovim config for vim as well
    ".vim": "nvim",
    ".vimrc": "nvim/init.vim",
    ".zshrc": "zsh/.zshrc",
    ".tmux.conf": "tmux/tmux.conf",
    ".config/alacritty": "alacritty",
    ".config/zathura": "zathura",
}

POSTINSTALL = [
    "nvim --headless +PlugInstall +qall" # install nvim plugins after copying
]

def backup(src):
    if path.exists(src) and not path.islink(src):
        newloc = path.join(os.getcwd(), BACKUP, path.basename(src))
        print(" -- Backing up: {} -> {}".format(src, newloc))
        move(src, newloc)


def link(src, dst):
    src = path.abspath(path.join(os.getcwd(), src))
    dst = path.abspath(path.join(path.expanduser('~'), dst))
    backup(dst)
    print("Linking: {} -> {}".format(src, dst))
    if path.islink(dst):
        os.remove(dst)
    os.symlink(src, dst)

# install
if not path.isdir(BACKUP):
    print("Making backup dir...")
    os.mkdir(BACKUP)

for (dest, src) in SYMLINKS.items():
    link(src, dest)

for cmd in POSTINSTALL:
    os.system(cmd)
